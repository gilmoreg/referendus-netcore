namespace referendus_netcore
{
	using Microsoft.EntityFrameworkCore;
	using System.Collections.Generic;
	using System.Linq;

	public class SqlReferenceData : IReferenceData
    {
		PsqlContext _context;

		public SqlReferenceData(PsqlContext context)
		{
			_context = context;
		}

		public Reference Add(Reference reference)
		{
			_context.References.Add(reference);
			_context.SaveChanges();
			// Entity Framework will autopopulate Id with what was generated by the SQL server
			return reference;
		}

		public bool Delete(int id, string userId)
		{
			var reference = _context.References.FirstOrDefault(r => r.Id == id && r.UserId == userId);
			if (reference != null)
			{
				_context.References.Remove(reference);
				_context.SaveChanges();
				return true;
			}
			return false;
		}

		public Reference Get(int id, string userId)
		{
			return _context.References.FirstOrDefault(r => r.Id == id && r.UserId == userId);
		}

		public IEnumerable<Reference> GetAll(string userId)
		{
			return _context.References.Where(r => r.UserId == userId);
		}

		public Reference Update(Reference reference)
		{
			_context.Attach(reference).State = EntityState.Modified;
			_context.SaveChanges();
			return reference;
		}
	}
}
